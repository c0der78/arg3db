.TH "coda::db::mysql::row" 3 "Sat Dec 1 2018" "coda db" \" -*- nroff -*-
.ad l
.nh
.SH NAME
coda::db::mysql::row
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <row\&.h>\fP
.PP
Inherits \fBcoda::db::row_impl\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBrow\fP (const std::shared_ptr< \fBmysql::session\fP > &db, const std::shared_ptr< MYSQL_RES > &res, MYSQL_ROW \fBrow\fP)"
.br
.ti -1c
.RI "\fBrow\fP (const \fBrow\fP &other)=delete"
.br
.ti -1c
.RI "\fBrow\fP (\fBrow\fP &&other) noexcept=default"
.br
.ti -1c
.RI "\fBrow\fP & \fBoperator=\fP (const \fBrow\fP &other)=delete"
.br
.ti -1c
.RI "\fBrow\fP & \fBoperator=\fP (\fBrow\fP &&other) noexcept=default"
.br
.ti -1c
.RI "std::string \fBcolumn_name\fP (size_t position) const override"
.br
.ti -1c
.RI "\fBcolumn_type\fP \fBcolumn\fP (size_t position) const override"
.br
.ti -1c
.RI "\fBcolumn_type\fP \fBcolumn\fP (const std::string &name) const override"
.br
.ti -1c
.RI "size_t \fBsize\fP () const noexcept override"
.br
.ti -1c
.RI "bool \fBis_valid\fP () const noexcept override"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
a mysql specific implementation of a row 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "coda::db::mysql::row::row (const std::shared_ptr< \fBmysql::session\fP > & db, const std::shared_ptr< MYSQL_RES > & res, MYSQL_ROW row)"

.PP
\fBParameters:\fP
.RS 4
\fIdb\fP the database in use 
.br
\fIres\fP the query result 
.br
\fIrow\fP the row values 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "\fBcolumn_type\fP coda::db::mysql::row::column (size_t position) const\fC [override]\fP, \fC [virtual]\fP"
gets a column in the row 
.PP
\fBParameters:\fP
.RS 4
\fIposition\fP the index of the column 
.RE
.PP
\fBReturns:\fP
.RS 4
the column object 
.RE
.PP

.PP
Implements \fBcoda::db::row_impl\fP\&.
.SS "\fBcolumn_type\fP coda::db::mysql::row::column (const std::string & name) const\fC [override]\fP, \fC [virtual]\fP"
gets a column in the row 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP the name of the column 
.RE
.PP
\fBReturns:\fP
.RS 4
the column object 
.RE
.PP

.PP
Implements \fBcoda::db::row_impl\fP\&.
.SS "std::string coda::db::mysql::row::column_name (size_t position) const\fC [override]\fP, \fC [virtual]\fP"
gets the name of a column in the row 
.PP
\fBParameters:\fP
.RS 4
\fIposition\fP the index of the column 
.RE
.PP
\fBReturns:\fP
.RS 4
the name of the column at the given position 
.RE
.PP

.PP
Implements \fBcoda::db::row_impl\fP\&.
.SS "bool coda::db::mysql::row::is_valid () const\fC [override]\fP, \fC [virtual]\fP, \fC [noexcept]\fP"
tests if the row internals are valid 
.PP
\fBReturns:\fP
.RS 4
true if the row is valid 
.RE
.PP

.PP
Implements \fBcoda::db::row_impl\fP\&.
.SS "size_t coda::db::mysql::row::size () const\fC [override]\fP, \fC [virtual]\fP, \fC [noexcept]\fP"
gets the number of columns in the row 
.PP
\fBReturns:\fP
.RS 4
the number of columns; 
.RE
.PP

.PP
Implements \fBcoda::db::row_impl\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for coda db from the source code\&.
