.TH "coda::db::schema_factory" 3 "Sat Dec 1 2018" "coda db" \" -*- nroff -*-
.ad l
.nh
.SH NAME
coda::db::schema_factory
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <schema_factory\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBschema_factory\fP (\fBschema_factory\fP &&other) noexcept=default"
.br
.ti -1c
.RI "\fBschema_factory\fP (const \fBschema_factory\fP &other)=default"
.br
.ti -1c
.RI "\fBschema_factory\fP & \fBoperator=\fP (const \fBschema_factory\fP &other)=default"
.br
.ti -1c
.RI "\fBschema_factory\fP & \fBoperator=\fP (\fBschema_factory\fP &&other) noexcept=default"
.br
.ti -1c
.RI "std::shared_ptr< \fBschema\fP > \fBget\fP (const std::shared_ptr< \fBsession\fP > &\fBsession\fP, const std::string &tableName)"
.br
.ti -1c
.RI "void \fBclear\fP (const std::string &tableName)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Schema factory handles caching of table schemas\&. Caching the schemas reduces the amount of db reads when working with records\&. 
.SH "Member Function Documentation"
.PP 
.SS "void coda::db::schema_factory::clear (const std::string & tableName)"
clears a cached schema for the table name 
.PP
\fBParameters:\fP
.RS 4
\fItableName\fP the table name to clear the schema for 
.RE
.PP

.SS "std::shared_ptr<\fBschema\fP> coda::db::schema_factory::get (const std::shared_ptr< \fBsession\fP > & session, const std::string & tableName)"
gets the schema given a session and a table name 
.PP
\fBParameters:\fP
.RS 4
\fIsession\fP the database session 
.br
\fItableName\fP the name of the table 
.RE
.PP
\fBReturns:\fP
.RS 4
the schema for the table name in the session 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for coda db from the source code\&.
