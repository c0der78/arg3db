

set(TEST_SOURCES
	main.db.test.cpp
	db.test.cpp
	column.test.cpp
	delete_query.test.cpp
	join_clause.test.cpp
	modify_query.test.cpp
	record.test.cpp
	resultset.test.cpp
	row.test.cpp
	schema.test.cpp
	schema_factory.test.cpp
	select_query.test.cpp
	transaction.test.cpp
	update_query.test.cpp
)

add_library(${PROJECT_NAME}-test
	${TEST_SOURCES}
	util.cpp
)

include_directories(SYSTEM vendor/bandit SYSTEM vendor/benchpress/src ${PROJECT_SOURCE_DIR}/src)

if (MYSQL_VERSION)

add_executable (${PROJECT_NAME}_test_mysql
	mysql.test.cpp
	mysql/binding.test.cpp
	mysql/column.test.cpp
	mysql/resultset.test.cpp
	mysql/row.test.cpp
	mysql/session.test.cpp
	mysql/statement.test.cpp
)

set_target_properties(${PROJECT_NAME}_test_mysql PROPERTIES COMPILE_FLAGS "-DTEST_MYSQL")

target_link_libraries (${PROJECT_NAME}_test_mysql ${PROJECT_NAME}-mysql ${PROJECT_NAME}-test)

include_directories(${MYSQL_INCLUDE_DIR})

endif()

if (SQLITE3_FOUND)

add_executable (${PROJECT_NAME}_test_sqlite
	sqlite.test.cpp
	sqlite/column.test.cpp
	sqlite/resultset.test.cpp
	sqlite/row.test.cpp
	sqlite/statement.test.cpp
	sqlite/transaction.test.cpp
)

set_target_properties(${PROJECT_NAME}_test_sqlite PROPERTIES COMPILE_FLAGS "-DTEST_SQLITE")

target_link_libraries (${PROJECT_NAME}_test_sqlite ${PROJECT_NAME}-sqlite ${PROJECT_NAME}-test)

include_directories(${SQLITE3_INCLUDE_DIR})

endif()

if (PostgreSQL_FOUND)

add_executable (${PROJECT_NAME}_test_postgres
	postgres.test.cpp
	postgres/binding.test.cpp
	postgres/column.test.cpp
	postgres/resultset.test.cpp
	postgres/row.test.cpp
	postgres/session.test.cpp
	postgres/statement.test.cpp
	postgres/transaction.test.cpp
)

set_target_properties(${PROJECT_NAME}_test_postgres PROPERTIES COMPILE_FLAGS "-DTEST_POSTGRES")

target_link_libraries (${PROJECT_NAME}_test_postgres ${PROJECT_NAME}-postgres ${PROJECT_NAME}-test)

include_directories(${PostgreSQL_INCLUDE_DIRS})

endif()

add_executable (${PROJECT_NAME}_test
	log.test.cpp
	main.test.cpp
	sql_value.test.cpp
	where_clause.test.cpp
	util.cpp
)

target_link_libraries (${PROJECT_NAME}_test ${PROJECT_NAME})

add_executable (${PROJECT_NAME}_test_all run_all.test.cpp)

if(ENABLE_BENCHMARKING)
add_subdirectory(benchmarks)
endif()
